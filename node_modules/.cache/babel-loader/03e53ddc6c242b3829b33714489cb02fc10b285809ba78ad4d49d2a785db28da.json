{"ast":null,"code":"var _jsxFileName = \"/home/martin/Moringa/CodeChallange/Bank/bank/src/components/AccountContainer.js\";\n// Using import to use data in other files\nimport React, { Component } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\n// Creating AccountContainer\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass AccountContainer extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      transactions: [],\n      search: \"\",\n      select: \"all\"\n    };\n    this.addTransactionFun = addTransaction => {\n      this.setState(prevState => {\n        return {\n          transactions: [...prevState.transactions, addTransaction]\n        };\n      });\n    };\n    this.deleteTransactionFun = deletedTransaction => {\n      let newTransArr = this.state.transactions.filter(transaction => {\n        return transaction.id !== deletedTransaction.id;\n      });\n      this.setState({\n        transactions: newTransArr\n      });\n    };\n    this.searchFun = searchResult => {\n      this.setState({\n        search: searchResult\n      });\n    };\n    this.selectFun = selectedResult => {\n      this.setState({\n        select: selectedResult\n      });\n    };\n    this.filterSearchTransactions = () => {\n      let {\n        transactions,\n        search,\n        select\n      } = this.state;\n      let filterSearch = transactions.filter(transaction => {\n        return transaction.description.toLowerCase().includes(search.toLowerCase());\n      });\n      switch (select) {\n        case \"all\":\n          return filterSearch;\n        case \"descriptionUP\":\n          return filterSearch.sort((wordA, wordB) => {\n            return wordA.description.localeCompare(wordB.description);\n          });\n        case \"descriptionDOWN\":\n          return filterSearch.sort((wordA, wordB) => {\n            return wordB.description.localeCompare(wordA.description);\n          });\n        case \"categoryUP\":\n          return filterSearch.sort((wordA, wordB) => {\n            return wordA.category.localeCompare(wordB.category);\n          });\n        case \"categoryDOWN\":\n          return filterSearch.sort((wordA, wordB) => {\n            return wordB.category.localeCompare(wordA.category);\n          });\n        case \"amountUP\":\n          return filterSearch.sort((numA, numB) => {\n            return numA.amount - numB.amount;\n          });\n        case \"amountDOWN\":\n          return filterSearch.sort((numA, numB) => {\n            return numB.amount - numA.amount;\n          });\n        case \"dateUP\":\n          return filterSearch.sort((numA, numB) => {\n            return new Date(numA.date) - new Date(numB.date);\n          });\n        case \"dateDOWN\":\n          return filterSearch.sort((numA, numB) => {\n            return new Date(numB.date) - new Date(numA.date);\n          });\n        default:\n      }\n    };\n  }\n  // Using fetch to get data from server\n  componentDidMount() {\n    fetch('http://localhost:3000/transactions').then(r => r.json()).then(resp => {\n      this.setState({\n        transactions: resp\n      });\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        searchValue: this.state.search,\n        searchFun: this.searchFun\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddTransactionForm, {\n        addTransactionFun: this.addTransactionFun\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TransactionsList, {\n        transactions: this.filterSearchTransactions(),\n        select: this.state.select,\n        selectFun: this.selectFun,\n        deleteTransactionFun: this.deleteTransactionFun\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default AccountContainer;","map":{"version":3,"names":["React","Component","TransactionsList","Search","AddTransactionForm","AccountContainer","state","transactions","search","select","addTransactionFun","addTransaction","setState","prevState","deleteTransactionFun","deletedTransaction","newTransArr","filter","transaction","id","searchFun","searchResult","selectFun","selectedResult","filterSearchTransactions","filterSearch","description","toLowerCase","includes","sort","wordA","wordB","localeCompare","category","numA","numB","amount","Date","date","componentDidMount","fetch","then","r","json","resp","render"],"sources":["/home/martin/Moringa/CodeChallange/Bank/bank/src/components/AccountContainer.js"],"sourcesContent":["// Using import to use data in other files\nimport React, { Component } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\n// Creating AccountContainer\nclass AccountContainer extends Component {\n\n  state = {\n    transactions : [],\n    search: \"\",\n    select: \"all\"\n  } \n// Using fetch to get data from server\n  componentDidMount(){\n    fetch('http://localhost:3000/transactions')\n    .then(r => r.json())\n    .then(resp => {\n      this.setState({\n        transactions: resp\n      })\n    })\n  }\n\n  \n  addTransactionFun = (addTransaction) =>{\n    this.setState(prevState => {\n      return {\n        transactions: [...prevState.transactions, addTransaction]\n      }\n    })\n  }\n\n  deleteTransactionFun = (deletedTransaction) => {\n    let newTransArr = this.state.transactions.filter(transaction => {\n      return transaction.id !== deletedTransaction.id\n    })\n\n    this.setState({\n      transactions: newTransArr\n    })\n  }\n\n\n\n  searchFun = (searchResult) => {\n    this.setState({\n      search: searchResult\n    })\n  }\n\n  selectFun = (selectedResult) => {\n    this.setState({\n      select: selectedResult\n    })\n  }\n\n\n\n  filterSearchTransactions = () => {\n    let {transactions, search, select} = this.state\n    \n    let filterSearch = transactions.filter(transaction => {\n      return transaction.description.toLowerCase().includes(search.toLowerCase())\n    })\n\n    switch(select){\n      case \"all\" :\n        return filterSearch\n\n      case \"descriptionUP\" : \n        return filterSearch.sort( (wordA, wordB) => {\n            return wordA.description.localeCompare(wordB.description)\n        })\n\n      case \"descriptionDOWN\" : \n      return filterSearch.sort( (wordA, wordB) => {\n          return wordB.description.localeCompare(wordA.description)\n      })\n        \n      case \"categoryUP\" : \n      return filterSearch.sort( (wordA, wordB) => {\n          return wordA.category.localeCompare(wordB.category)\n      })\n\n      case \"categoryDOWN\" : \n      return filterSearch.sort( (wordA, wordB) => {\n          return wordB.category.localeCompare(wordA.category)\n      })\n\n      case \"amountUP\" : \n      return filterSearch.sort( (numA, numB) => {\n          return numA.amount - numB.amount\n      })\n\n      case \"amountDOWN\" : \n      return filterSearch.sort( (numA, numB) => {\n          return numB.amount - numA.amount\n      })\n\n      case \"dateUP\" : \n      return filterSearch.sort( (numA, numB) => {\n          return new Date(numA.date) - new Date(numB.date)\n      })\n\n      case \"dateDOWN\" : \n      return filterSearch.sort( (numA, numB) => {\n          return new Date(numB.date) - new Date(numA.date)\n      })\n\n      default:\n    }\n  }\n\n\n\n  render() {\n    return (\n      <div>\n        <Search \n           searchValue={this.state.search}\n           searchFun={this.searchFun}\n        />\n\n        <AddTransactionForm \n          addTransactionFun={this.addTransactionFun}\n        />\n\n        <TransactionsList\n          transactions={this.filterSearchTransactions()}\n          select={this.state.select}\n          selectFun={this.selectFun}\n          deleteTransactionFun={this.deleteTransactionFun}\n         />\n      </div>\n    );\n  }\n}\n\nexport default AccountContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}